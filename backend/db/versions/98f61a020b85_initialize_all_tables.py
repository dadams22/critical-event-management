"""Initialize all tables

Revision ID: 98f61a020b85
Revises:
Create Date: 2024-05-26 10:40:18.052434

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "98f61a020b85"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "asset_type",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("icon_identifier", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.PrimaryKeyConstraint("organization_id", "id"),
    )
    op.create_table(
        "site",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("bounds", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.PrimaryKeyConstraint("organization_id", "id"),
    )
    op.create_table(
        "user",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hashed", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organization.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("organization_id", "id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "building",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("site_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id", "site_id"],
            ["site.organization_id", "site.id"],
        ),
        sa.PrimaryKeyConstraint("organization_id", "site_id", "id"),
    )
    op.create_table(
        "floor",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("site_id", sa.UUID(), nullable=False),
        sa.Column("building_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("sort_order", sa.Integer(), nullable=False),
        sa.Column("floor_plan_img_path", sa.String(), nullable=False),
        sa.Column("floor_plan_bounds", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id", "site_id", "building_id"],
            ["building.organization_id", "building.site_id", "building.id"],
        ),
        sa.PrimaryKeyConstraint("organization_id", "site_id", "building_id", "id"),
    )
    op.create_table(
        "asset",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("site_id", sa.UUID(), nullable=False),
        sa.Column("building_id", sa.UUID(), nullable=False),
        sa.Column("floor_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("asset_type_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("photo_img_path", sa.String(), nullable=True),
        sa.Column("next_maintenance_date", sa.DateTime(), nullable=False),
        sa.Column("managed_by_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id", "asset_type_id"],
            ["asset_type.organization_id", "asset_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id", "managed_by_id"],
            ["user.organization_id", "user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id", "site_id", "building_id", "floor_id"],
            ["floor.organization_id", "floor.site_id", "floor.building_id", "floor.id"],
        ),
        sa.PrimaryKeyConstraint(
            "organization_id", "site_id", "building_id", "floor_id", "id"
        ),
    )
    op.create_table(
        "maintenance_log",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("site_id", sa.UUID(), nullable=False),
        sa.Column("building_id", sa.UUID(), nullable=False),
        sa.Column("floor_id", sa.UUID(), nullable=False),
        sa.Column("asset_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default="now()", nullable=False),
        sa.Column("notes", sa.String(), nullable=False),
        sa.Column("photo_img_path", sa.String(), nullable=True),
        sa.Column("reported_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id", "reported_by_id"],
            ["user.organization_id", "user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id", "site_id", "building_id", "floor_id", "asset_id"],
            [
                "asset.organization_id",
                "asset.site_id",
                "asset.building_id",
                "asset.floor_id",
                "asset.id",
            ],
        ),
        sa.PrimaryKeyConstraint(
            "organization_id", "site_id", "building_id", "floor_id", "asset_id", "id"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("maintenance_log")
    op.drop_table("asset")
    op.drop_table("floor")
    op.drop_table("building")
    op.drop_table("user")
    op.drop_table("site")
    op.drop_table("asset_type")
    op.drop_table("organization")
    # ### end Alembic commands ###
